;/*
; * Timer3_3.c
; *
; * Created: 2018-06-05 ¿ÀÈÄ 12:41:35
; * Author: KHJ
; */
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;unsigned char count1 = 0,count2 = 0,FNDcount1 = 0,FNDcount2 = 99;
;void FND();
;void main(void) {
; 0000 000C void main(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000D     DDRA = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000E     DDRD = 0xff;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000F     TIMSK = 0x41;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0010     TCCR0 = 0x07;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0011     TCNT0 = 0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0012     TCCR2 = 0x05;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0013     TCNT2 = 0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0014     SREG = 0x80;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0015     while (1) {
;PCODE: $0000001E VOL: 0
; 0000 0016         FND();
;PCODE: $0000001F VOL: 0
; 0000 0017     }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0018 }
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;interrupt [TIM2_OVF] void overflow2(void)
; 0000 001A {
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001B     count2++;
;PCODE: $00000027 VOL: 0
; 0000 001C     if(count2 == 37) {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001D         FNDcount2--;
;PCODE: $0000002B VOL: 0
; 0000 001E         if(FNDcount2 == 0) {
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001F             FNDcount2 = 99;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0020         }
; 0000 0021         count2 = 0;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0022     }
; 0000 0023 }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;interrupt [TIM0_OVF] void overflow(void) {
; 0000 0024 interrupt [17] void overflow(void) {
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0025     count1++;
;PCODE: $00000038 VOL: 0
; 0000 0026     if(count1 == 18) {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0027         FNDcount1++;
;PCODE: $0000003C VOL: 0
; 0000 0028         if(FNDcount1 == 100) {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0029             FNDcount1 = 0;
;PCODE: $00000040 VOL: 0
; 0000 002A         }
; 0000 002B         count1 = 0;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002C     }
; 0000 002D }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;void FND(){
; 0000 002E void FND(){
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002F     unsigned char st1,nd1,st2,nd2;
; 0000 0030     nd2 = (FNDcount2/10)%10;
;PCODE: $00000049 VOL: 0
;	st1 -> R17
;	nd1 -> R16
;	st2 -> R19
;	nd2 -> R18
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0031     st2 = FNDcount2%10;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0032     nd1 = (FNDcount1/10)%10;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0033     st1 = FNDcount1%10;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0034     PORTD = 0x70 | st1;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0035     delay_ms(2);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0036     PORTD = 0xb0 | nd1;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0037     delay_ms(2);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0038     PORTD = 0xd0 | st2;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0039     delay_ms(2);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 003A     PORTD = 0xe0 | nd2;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 003B     delay_ms(2);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 003C }
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
