;/*
; * Timer3_2.c
; *
; * Created: 2018-06-05 ¿ÀÈÄ 12:27:15
; * Author: KHJ
; */
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;unsigned char LED = 0x01, count = 0,FNDcount = 0;
;void FND();
;void main(void) {
; 0000 000C void main(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000D     DDRA = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000E     DDRD = 0xff;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000F     TIMSK = 0x01;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0010     TCCR0 = 0x07;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0011     TCNT0 = 0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0012     SREG = 0x80;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0013     while (1) {
;PCODE: $0000001A VOL: 0
; 0000 0014         PORTA = LED;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0015         FND();
;PCODE: $0000001D VOL: 0
; 0000 0016         if(FNDcount == 5) {
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0017             break;
;PCODE: $00000021 VOL: 0
; 0000 0018         }
; 0000 0019     }
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 001A }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;interrupt [TIM0_OVF] void overflow(void) {
; 0000 001B interrupt [17] void overflow(void) {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 001C     count++;
;PCODE: $0000002A VOL: 0
; 0000 001D     if(count == 31) {
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001E         LED <<= 1;
;PCODE: $0000002E VOL: 0
; 0000 001F         count = 0;
;PCODE: $0000002F VOL: 0
; 0000 0020         if(LED == 0x00) {
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0021             LED = 0x01;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0022             FNDcount++;
;PCODE: $00000034 VOL: 0
; 0000 0023         }
; 0000 0024     }
;PCODE: $00000035 VOL: 0
; 0000 0025 }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;void FND(){
; 0000 0026 void FND(){
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0027     unsigned char st,nd,rd,th;
; 0000 0028     th = (FNDcount/1000)%10;
;PCODE: $0000003C VOL: 0
;	st -> R17
;	nd -> R16
;	rd -> R19
;	th -> R18
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0029     rd = (FNDcount/100)%10;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 002A     nd = (FNDcount/10)%10;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 002B     st = FNDcount%10;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 002C     PORTD = 0x70 | st;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 002D     delay_ms(2);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 002E     PORTD = 0xb0 | nd;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 002F     delay_ms(2);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0030     PORTD = 0xd0 | rd;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0031     delay_ms(2);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0032     PORTD = 0xe0 | th;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0033     delay_ms(2);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0034 }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
