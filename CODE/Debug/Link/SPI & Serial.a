;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// SPI functions
;#include <spi.h>
;
;// Declare your global variables here
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;unsigned char USART_Receive( void );        /* 반환형이 unsigned char인 함수 */
;void SPI_MasterTransmit(unsigned char cData);  /* 반환형이 void이나 함수 호출시에 입력값이 있는 함수 */
;
;void main(void)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0011     DDRB = 0x0f;     //SPI통신 출력 설정
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0012 
; 0000 0013     //위저드 사용으로 초기화
; 0000 0014     // USART0 initialization
; 0000 0015     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0016     // USART0 Receiver: On
; 0000 0017     // USART0 Transmitter: Off
; 0000 0018     // USART0 Mode: Asynchronous
; 0000 0019     // USART0 Baud Rate: 9600
; 0000 001A     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001B     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001C     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001D     UBRR0H=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001E     UBRR0L=0x67;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001F 
; 0000 0020 
; 0000 0021     // SPI initialization
; 0000 0022     // SPI Type: Master
; 0000 0023     // SPI Clock Rate: 125.000 kHz
; 0000 0024     // SPI Clock Phase: Cycle Start
; 0000 0025     // SPI Clock Polarity: Low
; 0000 0026     // SPI Data Order: MSB First
; 0000 0027     SPCR=(0<<SPIE) | (1<<SPE) | (0<<DORD) | (1<<MSTR) | (0<<CPOL) | (0<<CPHA) | (1<<SPR1) | (1<<SPR0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0028     SPSR=(0<<SPI2X);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0029 
; 0000 002A 
; 0000 002B     while (1) {
;PCODE: $0000001E VOL: 0
; 0000 002C         SPI_MasterTransmit(USART_Receive());
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002D     }
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002E }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;unsigned char USART_Receive( void ) {   //데이터 시트에 있는 함수
; 0000 002F unsigned char USART_Receive( void ) {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0030     /* 데이터 수신시까지 대기 하는 코드 */
; 0000 0031     while ( !(UCSR0A & (1<<RXC0)) )         /*데이터 수신이 완료될경우, RXC0가 1이 된다.*/
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0032     ;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0033     /* 수신이 완료된 데이터를 이 함수를 호출한 곳으로 반환한다. */
; 0000 0034     return UDR0;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0035 }
;PCODE: $00000031 VOL: 0
;void SPI_MasterTransmit(unsigned char cData) {     //데이터 시트에 있는 함수
; 0000 0036 void SPI_MasterTransmit(unsigned char cData) {
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0037     /* 전송 시작 코드 */
; 0000 0038     SPDR = cData;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;	cData -> R17
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0039     /* 전송이 완료될때까지 대기 */
; 0000 003A     while(!(SPSR & (1<<SPIF)))
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003B     ;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 003C }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
